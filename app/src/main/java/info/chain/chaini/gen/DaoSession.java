package info.chain.chaini.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import info.chain.chaini.gen.AccountBean;
import info.chain.chaini.gen.AccountTokenBean;
import info.chain.chaini.gen.AppBean;
import info.chain.chaini.gen.ChainBean;
import info.chain.chaini.gen.TokenBean;
import info.chain.chaini.gen.UserBean;
import info.chain.chaini.gen.WalletBean;

import info.chain.chaini.gen.AccountBeanDao;
import info.chain.chaini.gen.AccountTokenBeanDao;
import info.chain.chaini.gen.AppBeanDao;
import info.chain.chaini.gen.ChainBeanDao;
import info.chain.chaini.gen.TokenBeanDao;
import info.chain.chaini.gen.UserBeanDao;
import info.chain.chaini.gen.WalletBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountBeanDaoConfig;
    private final DaoConfig accountTokenBeanDaoConfig;
    private final DaoConfig appBeanDaoConfig;
    private final DaoConfig chainBeanDaoConfig;
    private final DaoConfig tokenBeanDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig walletBeanDaoConfig;

    private final AccountBeanDao accountBeanDao;
    private final AccountTokenBeanDao accountTokenBeanDao;
    private final AppBeanDao appBeanDao;
    private final ChainBeanDao chainBeanDao;
    private final TokenBeanDao tokenBeanDao;
    private final UserBeanDao userBeanDao;
    private final WalletBeanDao walletBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountBeanDaoConfig = daoConfigMap.get(AccountBeanDao.class).clone();
        accountBeanDaoConfig.initIdentityScope(type);

        accountTokenBeanDaoConfig = daoConfigMap.get(AccountTokenBeanDao.class).clone();
        accountTokenBeanDaoConfig.initIdentityScope(type);

        appBeanDaoConfig = daoConfigMap.get(AppBeanDao.class).clone();
        appBeanDaoConfig.initIdentityScope(type);

        chainBeanDaoConfig = daoConfigMap.get(ChainBeanDao.class).clone();
        chainBeanDaoConfig.initIdentityScope(type);

        tokenBeanDaoConfig = daoConfigMap.get(TokenBeanDao.class).clone();
        tokenBeanDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        walletBeanDaoConfig = daoConfigMap.get(WalletBeanDao.class).clone();
        walletBeanDaoConfig.initIdentityScope(type);

        accountBeanDao = new AccountBeanDao(accountBeanDaoConfig, this);
        accountTokenBeanDao = new AccountTokenBeanDao(accountTokenBeanDaoConfig, this);
        appBeanDao = new AppBeanDao(appBeanDaoConfig, this);
        chainBeanDao = new ChainBeanDao(chainBeanDaoConfig, this);
        tokenBeanDao = new TokenBeanDao(tokenBeanDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        walletBeanDao = new WalletBeanDao(walletBeanDaoConfig, this);

        registerDao(AccountBean.class, accountBeanDao);
        registerDao(AccountTokenBean.class, accountTokenBeanDao);
        registerDao(AppBean.class, appBeanDao);
        registerDao(ChainBean.class, chainBeanDao);
        registerDao(TokenBean.class, tokenBeanDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(WalletBean.class, walletBeanDao);
    }
    
    public void clear() {
        accountBeanDaoConfig.clearIdentityScope();
        accountTokenBeanDaoConfig.clearIdentityScope();
        appBeanDaoConfig.clearIdentityScope();
        chainBeanDaoConfig.clearIdentityScope();
        tokenBeanDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
        walletBeanDaoConfig.clearIdentityScope();
    }

    public AccountBeanDao getAccountBeanDao() {
        return accountBeanDao;
    }

    public AccountTokenBeanDao getAccountTokenBeanDao() {
        return accountTokenBeanDao;
    }

    public AppBeanDao getAppBeanDao() {
        return appBeanDao;
    }

    public ChainBeanDao getChainBeanDao() {
        return chainBeanDao;
    }

    public TokenBeanDao getTokenBeanDao() {
        return tokenBeanDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public WalletBeanDao getWalletBeanDao() {
        return walletBeanDao;
    }

}
